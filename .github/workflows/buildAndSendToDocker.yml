# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_TAG: ${{github.run_id}}
  IMAGE_NAME: anwink/playground


jobs:
  build-and-push:
    name: Build and push image to Docker hub
    runs-on: ubuntu-latest
    environment: 
      name: Development
      url: https://hub.docker.com/repository/docker/anwink/playground

    steps:
      - name: Checkout the code from repo
        uses: actions/checkout@v3
      
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Upload the artifact to github
        uses: actions/upload-artifact@v3
        with:
          name: spring-artifact-my-app
          path: |
            ./target/demo-0.0.1-SNAPSHOT.jar
            ./Dockerfile
      
      - name: Push to docker hub
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: $IMAGE_NAME
          tags: $IMAGE_TAG, latest
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

  download-and-containarise:
    name: Download and containarize the jar file 
    runs-on: ubuntu-latest
    environment: 
      name: Production
      url: https://hub.docker.com/repository/docker/anwink/playground
    needs: build-and-push

    steps:
      - name: Download the artifact from build-and-push
        uses: actions/download-artifact@v3
        with:
          name: spring-artifact-my-app
      
      - name: print the dir details
        run: |
          pwd
          ls -la

      - name: Push to docker hub
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: $IMAGE_NAME
          tags: PROD, ${{ format('{0}-{1}',$IMAGE_TAG, PROD) }}
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME_PROD }}
          password: ${{ secrets.DOCKERHUB_TOKEN_PROD }}
